#BlueJ class context
comment0.params=size\ objs
comment0.target=ListBox(java.awt.Point,\ java.util.ArrayList)
comment0.text=\n\ Create\ a\ new\ ListBox.\n\ @param\ size\ The\ width\ and\ height\ of\ the\ ListBox.\n\ @param\ objs\ The\ list\ of\ Objects\ to\ display\ in\ the\ ListBox.\n
comment1.params=size
comment1.target=void\ resize(java.awt.Point)
comment10.params=
comment10.target=boolean\ hasChanged()
comment10.text=\n\ Action\ listener\ for\ when\ selection\ has\ been\ altered.\n\ @return\ Whethor\ or\ not\ selection\ has\ been\ altered\ since\ last\ call.\n
comment11.params=index
comment11.target=void\ setIndex(int)
comment11.text=\n\ Set\ which\ item\ to\ be\ selected.\n\ @param\ index\ The\ index\ of\ the\ item\ to\ be\ selected.\n\ @see\ addIndex(int)\n
comment12.params=index
comment12.target=void\ addIndex(int)
comment12.text=\n\ Cause\ the\ Object\ at\ the\ given\ index\ to\ be\ selected.\ Meant\ to\ be\ used\ when\ multiple\ selecting\ is\ enabled.\n\ @param\ index\ The\ index\ of\ the\ Object\ to\ be\ selected.\n\ @see\ setIndex(int)\n
comment13.params=index
comment13.target=void\ setIndexInView(int)
comment13.text=\n\ Ajust\ scroll\ amount\ to\ set\ the\ Object\ determined\ by\ the\ given\ index,\ to\ be\ in\ view.\n\ @param\ index\ Index\ for\ Object\ to\ be\ set\ to\ be\ in\ view.\n
comment14.params=
comment14.target=boolean\ hasSelection()
comment14.text=\n\ Determine\ if\ there\ are\ any\ Objects\ selected.\n\ @return\ Whether\ there\ are\ any\ Objects\ selected.\n
comment15.params=index
comment15.target=void\ toggleSelect(int)
comment15.text=\n\ Toggle\ the\ Object\ at\ the\ given\ index\ to\ be\ selected\ or\ not\ be\ selected.\n\ @param\ index\ The\ index\ of\ Object\ to\ toggle\ selection.\n
comment16.params=indexA\ indexB
comment16.target=void\ swap(int,\ int)
comment16.text=\n\ Swap\ two\ Objects\ in\ position.\ If\ Objects\ are\ selected,\ they\ will\ remain\ selected\ after\ the\ swap.\n\ @param\ indexA\ Index\ of\ Object\ to\ swap\ position.\n\ @param\ indexB\ Index\ of\ Object\ to\ swap\ position.\n
comment17.params=
comment17.target=java.lang.Object\ getOneSelection()
comment17.text=\n\ Get\ the\ selected\ Object.\ Meant\ to\ be\ used\ when\ multiple\ selecting\ is\ disabled,\ otherwise\ getSelection()\ is\ more\ appropriate.\n\ @return\ The\ selected\ Object.\ Null\ if\ none\ selected.\n\ @see\ getSelection()\n
comment18.params=
comment18.target=java.util.ArrayList\ getSelection()
comment18.text=\n\ Get\ all\ selected\ Object.\ Meant\ to\ be\ used\ when\ multiple\ selecting\ is\ enabled,\ otherwise\ getOneSelection()\ is\ more\ appropriate.\n\ @return\ The\ selected\ Objects.\ Null\ if\ none\ selected.\n\ @see\ getOneSelection()\n
comment19.params=index
comment19.target=java.lang.Object\ get(int)
comment19.text=\n\ Get\ the\ Object\ in\ the\ ListBox\ at\ the\ given\ index.\n\ @param\ index\ The\ index\ for\ what\ Object\ in\ the\ ListBox\ to\ get.\n\ @return\ The\ Object\ at\ the\ index\ of\ the\ ListBox.\ Null\ if\ invalid\ index.\n
comment2.params=
comment2.target=void\ redraw()
comment20.params=
comment20.target=java.util.ArrayList\ getList()
comment20.text=\n\ Get\ the\ contents\ of\ the\ ListBox.\n\ @return\ The\ contents\ of\ the\ ListBox.\n
comment21.params=s
comment21.target=boolean\ contains(java.lang.Object)
comment21.text=\n\ Determine\ whethor\ or\ not\ the\ given\ Object\ is\ contained\ within\ the\ list.\n\ @param\ The\ Object\ in\ question.\n\ @return\ Whethor\ or\ not\ the\ given\ Object\ is\ contained\ within\ the\ list.\n
comment22.params=s
comment22.target=int\ indexOf(java.lang.Object)
comment22.text=\n\ Determine\ the\ index\ for\ where\ the\ given\ Object\ lies\ within\ the\ list.\n\ @param\ The\ Object\ in\ question.\n\ @return\ The\ index\ for\ where\ the\ given\ Object\ lies\ within\ the\ list.\n
comment23.params=list
comment23.target=void\ setList(java.util.ArrayList)
comment23.text=\n\ Set\ the\ contents\ to\ the\ given\ list.\n\ @param\ list\ New\ list\ of\ Objects.\n
comment24.params=s
comment24.target=void\ add(java.lang.Object)
comment24.text=\n\ Add\ an\ Object\ to\ the\ ListBox,\ making\ it\ selected\ and\ in\ view.\n\ @param\ s\ The\ Object\ to\ be\ added.\n
comment25.params=s\ index
comment25.target=void\ add(java.lang.Object,\ int)
comment25.text=\n\ Insert\ an\ Object\ to\ the\ ListBox\ at\ the\ given\ position,\ making\ it\ selected\ and\ in\ view.\n\ @param\ s\ The\ Object\ to\ be\ inserted.\n\ @param\ index\ The\ position\ to\ insert\ String.\n
comment26.params=
comment26.target=void\ removeSelected()
comment26.text=\n\ Remove\ what\ is\ selected.\n
comment27.params=
comment27.target=int\ size()
comment27.text=\n\ Get\ the\ number\ of\ Objects\ in\ the\ ListBox's\ collection.\n\ @return\ The\ number\ of\ Objects\ in\ the\ ListBox's\ collection.\n
comment28.params=
comment28.target=void\ clear()
comment28.text=\n\ Remove\ everything\ from\ the\ ListBox.\n
comment29.params=index\ obj
comment29.target=void\ set(int,\ java.lang.Object)
comment29.text=\n\ Change\ the\ Object\ at\ a\ given\ index.\n\ @param\ index\ The\ index\ in\ the\ ListBox\ to\ change.\n\ @param\ obj\ The\ Object\ to\ set\ to\ at\ the\ given\ index.\n
comment3.params=font
comment3.target=void\ setFont(java.awt.Font)
comment30.params=
comment30.target=boolean\ multipleSelectingIsEnabled()
comment30.text=\n\ Determine\ if\ the\ ListBox\ is\ set\ to\ allow\ multiple\ selecting\ of\ Objects.\n\ @return\ If\ the\ ListBox\ is\ set\ to\ allow\ multiple\ selecting\ of\ Objects.\n
comment31.params=enable
comment31.target=void\ setMultipleSelecting(boolean)
comment31.text=\n\ Change\ if\ the\ ListBox\ is\ set\ to\ allow\ multiple\ selecting\ of\ Objects.\n\ @param\ enable\ If\ the\ ListBox\ will\ be\ set\ to\ allow\ multiple\ selecting\ of\ Objects.\n
comment32.params=
comment32.target=void\ sort()
comment4.params=scroll
comment4.target=void\ setScrollColor(java.awt.Color)
comment5.params=
comment5.target=void\ draw()
comment5.text=\n\ Update\ the\ ListBox's\ image.\n
comment6.params=
comment6.target=void\ act()
comment6.text=\n\ Act.\n
comment7.params=
comment7.target=java.util.ArrayList\ getIndexes()
comment7.text=\n\ Get\ the\ indexes\ of\ what\ is\ selected.\ Meant\ to\ be\ used\ when\ multiple\ selecting\ is\ enabled,\ otherwise\ getOneIndex()\ is\ more\ appropriate.\n\ @return\ The\ indexes\ of\ what\ is\ selected.\n\ @see\ getOneIndex()\n
comment8.params=
comment8.target=int\ getOneIndex()
comment8.text=\n\ Get\ the\ index\ of\ what\ is\ selected.\ Meant\ to\ be\ used\ when\ multiple\ selecting\ is\ disabled,\ otherwise\ getIndexes()\ is\ more\ appropriate.\n\ @return\ The\ index\ of\ what\ is\ selected.\ -1\ if\ none\ selected.\n\ @see\ getIndexes()\n
comment9.params=
comment9.target=void\ deselect()
comment9.text=\n\ Deselect\ selection.\n
numComments=33
