#BlueJ class context
comment0.params=
comment0.target=boolean\ textBoxHasFocus()
comment0.text=\n\ Determine\ if\ there\ exists\ a\ TextBox\ that\ has\ focus,\ within\ the\ World.\n\ @return\ Whethor\ or\ not\ there\ exists\ a\ TextBox\ that\ has\ focus,\ within\ the\ World.\n
comment1.params=bool
comment1.target=void\ readLowerAsUpperCase(boolean)
comment10.params=
comment10.target=void\ handleForSelecting()
comment11.params=
comment11.target=void\ gainedFocus()
comment11.text=\n\ Called\ when\ gains\ focus.<p>\n\ Releases\ Greenfoot.getKey().\n
comment12.params=
comment12.target=java.lang.String\ getText()
comment12.text=\n\ Get\ the\ contents\ of\ this\ TextBox.\n\ @return\ The\ text\ in\ this\ TextBox.\n
comment13.params=str
comment13.target=void\ setText(java.lang.String)
comment13.text=\n\ Set\ the\ text\ for\ this\ TextBox.\n\ @param\ str\ The\ text\ to\ be\ in\ this\ TextBox.\n
comment14.params=
comment14.target=void\ clear()
comment14.text=\n\ Set\ the\ text\ for\ this\ TextBox\ to\ "".\n
comment15.params=s
comment15.target=void\ acceptOnly(java.lang.String)
comment15.text=\n\ Set\ String\ of\ characters\ that\ will\ be\ allowed\ as\ input.\n\ @param\ s\ String\ of\ characters\ that\ will\ be\ allowed\ as\ input.\ Having\ an\ empty\ String\ will\ allow\ all\ characters\ to\ be\ inputed.\n
comment16.params=s
comment16.target=void\ dontAccept(java.lang.String)
comment16.text=\n\ Set\ String\ of\ characters\ that\ will\ not\ be\ allowed\ as\ input.\n\ @param\ s\ String\ of\ characters\ that\ will\ not\ be\ allowed\ as\ input.\n
comment17.params=m
comment17.target=void\ setMaxLength(int)
comment17.text=\n\ Set\ a\ limit\ for\ how\ long\ the\ text\ can\ be.\n\ @param\ m\ The\ limit\ for\ how\ many\ characters\ the\ text\ can\ include.\ -1\ will\ allow\ unlimited.\n
comment18.params=s
comment18.target=void\ setSize(java.awt.Point)
comment18.text=\n\ Set\ the\ width\ and\ height\ of\ this\ TextBox.\n\ @param\ s\ The\ width\ and\ height\ for\ this\ TextBox.\n
comment19.params=readOnly
comment19.target=void\ setReadOnly(boolean)
comment19.text=\n\ Set\ whether\ the\ TextBox\ will\ accept\ input.\n\ @param\ readOnly\ Whether\ the\ TextBox\ will\ accept\ input.\n
comment2.params=size\ text\ font
comment2.target=TextBox(java.awt.Point,\ java.lang.String,\ java.awt.Font)
comment2.text=\n\ Create\ a\ new\ TextBox.\n\ @param\ size\ The\ width\ and\ height\ of\ the\ TextBox.\n\ @param\ text\ The\ initial\ text\ to\ display\ in\ the\ TextBox.\n\ @param\ font\ The\ Font\ for\ the\ text.\n
comment20.params=focusable
comment20.target=void\ setFocusable(boolean)
comment21.params=
comment21.target=boolean\ isReadOnly()
comment21.text=\n\ Determine\ whether\ this\ TextBox\ will\ accept\ input.\n\ @return\ Whether\ this\ TextBox\ accepts\ input.\n
comment22.params=
comment22.target=java.awt.Color\ getCursorColor()
comment22.text=\n\ Get\ the\ Color\ of\ the\ blinking\ cursor.\n\ @return\ The\ Color\ of\ the\ blinking\ cursor.\n
comment23.params=c
comment23.target=void\ setCursorColor(java.awt.Color)
comment23.text=\n\ Change\ the\ Color\ of\ the\ blinking\ cursor.\n\ @param\ c\ The\ new\ Color\ of\ the\ blinking\ cursor.\n
comment24.params=
comment24.target=java.awt.Color\ getOutlineColor()
comment24.text=\n\ Get\ the\ Color\ outlining\ the\ TextBox\ when\ it\ has\ focus.\n\ @return\ The\ Color\ outlining\ the\ TextBox\ when\ it\ has\ focus.\n
comment25.params=c
comment25.target=void\ setOutlineColor(java.awt.Color)
comment25.text=\n\ Change\ the\ Color\ outlining\ the\ TextBox\ when\ it\ has\ focus.\n\ @param\ c\ The\ new\ Color\ outlining\ the\ TextBox\ when\ it\ has\ focus.\n
comment26.params=
comment26.target=java.awt.Color\ getScrollBarColor()
comment26.text=\n\ Get\ the\ Color\ of\ this\ TextBox's\ scroll\ bar.\n\ @return\ The\ Color\ of\ this\ TextBox's\ scroll\ bar.\n
comment27.params=c
comment27.target=void\ setScrollBarColor(java.awt.Color)
comment27.text=\n\ Change\ the\ Color\ of\ this\ TextBox's\ scroll\ bar.\n\ @param\ c\ The\ new\ Color\ of\ this\ TextBox's\ scroll\ bar.\n
comment28.params=
comment28.target=java.awt.Color\ getBackgroundColor()
comment28.text=\n\ Get\ the\ Color\ of\ this\ TextBox's\ background.\n\ @return\ The\ Color\ of\ this\ TextBox's\ background.\n
comment29.params=c
comment29.target=void\ setBackgroundColor(java.awt.Color)
comment29.text=\n\ Change\ the\ Color\ of\ this\ TextBox's\ background.\n\ @param\ c\ The\ new\ Color\ of\ this\ TextBox's\ background.\n
comment3.params=size\ text
comment3.target=TextBox(java.awt.Point,\ java.lang.String)
comment3.text=\n\ Create\ a\ new\ TextBox.\n\ @param\ size\ The\ width\ and\ height\ of\ the\ TextBox.\n\ @param\ text\ The\ initial\ text\ to\ display\ in\ the\ TextBox.\n
comment30.params=
comment30.target=java.awt.Color\ getMessageColor()
comment30.text=\n\ Get\ the\ Color\ that\ is\ used\ to\ display\ message.\ Default\:\ Color.GRAY\n\ @return\ The\ Color\ that\ is\ used\ to\ display\ message.\n
comment31.params=c
comment31.target=void\ setMessageColor(java.awt.Color)
comment31.text=\n\ Change\ the\ Color\ that\ is\ used\ to\ display\ message.\n\ @param\ c\ The\ new\ Color\ that\ is\ used\ to\ display\ message.\n\ @see\ setMessage(String)\n
comment32.params=m
comment32.target=void\ setMessage(java.lang.String)
comment32.text=\n\ Sets\ a\ message\ to\ display\ when\ this\ TextBox\ is\ not\ active\ and\ has\ no\ text.\n\ <p>\n\ Will\ be\ shown\ in\ the\ Color\ designated\ for\ message.\n\ @param\ m\ The\ message\ to\ display.\n\ @see\ setMessageColor(Color)\n
comment33.params=
comment33.target=java.lang.String\ getMessage()
comment33.text=\n\ Get\ the\ message\ that\ gets\ displayed\ when\ this\ TextBox\ is\ not\ active\ and\ has\ no\ text.\n\ @return\ The\ message\ that\ gets\ displayed\ when\ this\ TextBox\ is\ not\ active\ and\ has\ no\ text.\n
comment34.params=p
comment34.target=void\ setAsPassword(boolean)
comment34.text=\n\ Set\ if\ this\ TextBox\ will\ display\ its\ text\ as\ password\ characters.\n\ @param\ p\ If\ this\ TextBox\ will\ display\ its\ text\ as\ password\ characters.\n
comment35.params=
comment35.target=boolean\ isPassword()
comment35.text=\n\ Check\ if\ this\ TextBox\ will\ display\ its\ text\ as\ password\ characters.\n\ @return\ Whether\ this\ TextBox\ will\ display\ its\ text\ as\ password\ characters.\n
comment36.params=
comment36.target=boolean\ hasChanged()
comment4.params=
comment4.target=void\ act()
comment5.params=
comment5.target=void\ handleCopyCutPaste()
comment6.params=
comment6.target=void\ handleMouse()
comment7.params=
comment7.target=boolean\ deleteSelected()
comment8.params=
comment8.target=void\ handleInput()
comment9.params=
comment9.target=void\ handleArrowKeys()
numComments=37
