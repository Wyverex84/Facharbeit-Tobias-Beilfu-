#BlueJ class context
comment0.params=backColor\ textColor\ borderColor\ hoverColor\ disableColor\ selectColor
comment0.target=void\ setDefaultColors(java.awt.Color,\ java.awt.Color,\ java.awt.Color,\ java.awt.Color,\ java.awt.Color,\ java.awt.Color)
comment1.params=font
comment1.target=void\ setDefaultFont(java.awt.Font)
comment10.params=
comment10.target=java.awt.Color\ getTextColor()
comment11.params=
comment11.target=java.awt.Color\ getBorderColor()
comment12.params=
comment12.target=java.awt.Color\ getHoverColor()
comment13.params=
comment13.target=java.awt.Color\ getDisableColor()
comment14.params=
comment14.target=java.awt.Color\ getSelectColor()
comment15.params=
comment15.target=java.awt.Font\ getFont()
comment16.params=
comment16.target=void\ redraw()
comment16.text=\n\ Called\ when\ a\ drawing\ Color\ or\ Font\ has\ changed.\ Overwrite\ to\ make\ your\ GUI_Component\ update\ its\ image.\n\ Does\ nothing\ if\ not\ overwritten.\ Not\ necessary\ to\ overwrite\ if\ the\ GUI_Component\ redraws\ itself\ every\ act\ cycle\ (though\ this\ is\ avoided\ for\ some\ GUI_Components).\n
comment17.params=
comment17.target=GUI_Component.ScrollingListener\ initializeScroller()
comment18.params=
comment18.target=void\ act()
comment18.text=\n\ Listens\ for\:<p>\n\ Status\ for\ if\ the\ mouse\ is\ directly\ over\ this\ Actor.\ (Not\ over\ an\ Actor\ that\ is\ on\ top\ of\ this\ one).<p>\n\ Status\ for\ if\ this\ GUI_Component\ was\ last\ pressed\ on\ by\ the\ mouse.\ (Has\ focus).\n
comment19.params=
comment19.target=boolean\ mouseOverThis()
comment19.text=\n\ Check\ to\ see\ if\ the\ mouse\ is\ directly\ over\ this\ Actor.\ (Not\ over\ an\ Actor\ that\ is\ on\ top\ of\ this\ one).\n\ @return\ Whether\ or\ not\ the\ mouse\ is\ directly\ over\ this\ Actor.\n
comment2.params=color
comment2.target=void\ setBackColor(java.awt.Color)
comment20.params=
comment20.target=void\ gainedFocus()
comment20.text=\n\ Called\ when\ this\ Component\ gains\ focus.<p>\n\ Overwrite\ to\ have\ it\ do\ something.\n
comment21.params=
comment21.target=boolean\ hasFocus()
comment21.text=\n\ Check\ to\ see\ if\ this\ Actor\ was\ the\ last\ Actor\ pressed\ on\ by\ the\ mouse.\n\ @return\ Whether\ or\ not\ this\ Actor\ was\ the\ last\ Actor\ pressed\ on\ by\ the\ mouse.\n
comment22.params=
comment22.target=void\ giveFocus()
comment22.text=\n\ Force\ this\ GUI_Component\ to\ steal\ focus.\ (Removing\ focus\ from\ all\ others).\n
comment23.params=
comment23.target=void\ removeFocus()
comment23.text=\n\ Remove\ focus\ from\ this\ GUI_Component.\n
comment24.params=
comment24.target=boolean\ isHidden()
comment24.text=\n\ Check\ if\ this\ GUI_Component\ is\ set\ to\ be\ hidden.\ (Typically\ set\ by\ something\ else\ telling\ this\ GUI_Component\ to\ be\ okay\ to\ display\ or\ not).<p>\n\ @return\ Whether\ or\ not\ this\ GUI_Component\ is\ set\ to\ be\ hidden.\n\ @see\ willShow()\n\ @see\ hide(boolean)\n
comment25.params=h
comment25.target=void\ hide(boolean)
comment25.text=\n\ Set\ whether\ or\ not\ this\ GUI_Component\ to\ be\ hidden.\n\ @param\ h\ Whether\ or\ not\ this\ GUI_Component\ is\ to\ be\ set\ to\ be\ hidden.\n\ @see\ isHidden()\n
comment26.params=
comment26.target=boolean\ willShow()
comment26.text=\n\ Check\ if\ this\ GUI_Component\ status\ on\ being\ set\ to\ be\ showing\ is\ true.<p>\n\ Status\ to\ show\ means\ if\ this\ GUI_Component\ is/will-be\ in\ the\ World.\ (When\ not\ set\ to\ be\ hidden).\n\ @return\ Whether\ or\ not\ this\ GUI_Component\ is\ set\ to\ show.\n\ @see\ isHidden()\n\ @see\ toggleShow()\n
comment27.params=
comment27.target=void\ toggleShow()
comment27.text=\n\ Set\ this\ GUI_Component\ to\ show\ if\ not\ already\ set\ to\ show\ and\ vice\ versa.\n\ @see\ willShow()\n
comment28.params=
comment28.target=boolean\ mousePressedOnThisOrComponents()
comment28.text=\n\ Check\ if\ this\ GUI_Component\ or\ any\ subcomponent\ has\ been\ pressed\ on\ by\ the\ mouse.<p>\n\ Overwrite\ to\ include\ additional\ components.\n\ @return\ Whether\ or\ not\ this\ GUI_Component\ or\ any\ subcomponent\ has\ been\ pressed\ on\ by\ the\ mouse.\n
comment29.params=world
comment29.target=void\ addedToWorld(greenfoot.World)
comment29.text=\n\ Inherited\ from\ Actor,\ is\ called\ when\ this\ Window\ is\ added\ to\ the\ World.<p>\n\ Sets\ status\ to\ show\ to\ be\ true.\n\ @param\ world\ World\ to\ be\ added\ to.\n\ @see\ willShow()\n
comment3.params=color
comment3.target=void\ setTextColor(java.awt.Color)
comment30.params=
comment30.target=void\ removeFromWorld()
comment30.text=\n\ Remove\ this\ GUI_Component\ from\ the\ World.\n
comment31.params=
comment31.target=boolean\ inWorld()
comment31.text=\n\ Check\ if\ this\ GUI_Component\ is\ within\ the\ World.\n\ @return\ Whether\ or\ not\ this\ GUI_Component\ is\ within\ the\ World.\n
comment32.params=
comment32.target=int\ getGUIWidth()
comment32.text=\n\ Get\ the\ width\ in\ pixels\ that\ this\ GUI_Component\ will\ occupy.<p>\n\ Default\ the\ width\ of\ its\ image.\n\ @return\ The\ width\ in\ pixels\ that\ this\ GUI_Component\ will\ occupy.\n
comment33.params=
comment33.target=int\ getGUIHeight()
comment33.text=\n\ Get\ the\ height\ in\ pixels\ that\ this\ GUI_Component\ will\ occupy.<p>\n\ Default\ the\ height\ of\ its\ image.\n\ @return\ The\ height\ in\ pixels\ that\ this\ GUI_Component\ will\ occupy.\n
comment4.params=color
comment4.target=void\ setBorderColor(java.awt.Color)
comment5.params=color
comment5.target=void\ setHoverColor(java.awt.Color)
comment6.params=color
comment6.target=void\ setDisableColor(java.awt.Color)
comment7.params=color
comment7.target=void\ setSelectColor(java.awt.Color)
comment8.params=font
comment8.target=void\ setFont(java.awt.Font)
comment9.params=
comment9.target=java.awt.Color\ getBackColor()
numComments=34
