#BlueJ class context
comment0.params=
comment0.target=Button()
comment0.text=\r\n\ \ Creates\ a\ button\ with\ no\ set\ text\ or\ image.\r\n
comment1.params=labelText
comment1.target=Button(java.lang.String)
comment1.text=\r\n\ Creates\ a\ button\ with\ the\ specified\ text.\r\n\r\n\ @param\ labelText\ The\ text\ displayed\ on\ the\ button.\r\n
comment10.params=bgHoverColor
comment10.target=void\ setBackgroundHover(java.awt.Color)
comment10.text=\r\n\ Set\ the\ background\ color\ of\ this\ button\ on\ hover\ (mouseover).\r\n\r\n\ @param\ bgHoverColor\ The\ desired\ background\ color\ on\ hover.\r\n
comment11.params=g
comment11.target=void\ paintComponent(java.awt.Graphics)
comment11.text=\r\n\ Prepares\ the\ button's\ background\ images.\r\n\r\n\ If\ the\ images\ are\ supplied\ by\ the\ user,\ then\ copies\ those\ images\ onto\r\n\ the\ background.\ Otherwise,\ fills\ the\ background\ images\ with\ their\r\n\ respective\ colors.\r\n\r\n\ @param\ g\ The\ <code>Graphics</code>\ context\ in\ which\ to\ paint.\r\n
comment12.params=img\ bgColor\ imgWidth\ imgHeight
comment12.target=greenfoot.GreenfootImage\ prepareImage(greenfoot.GreenfootImage,\ java.awt.Color,\ int,\ int)
comment12.text=\r\n\ Helper\ method\ to\ prepare\ images\ for\ writing\ text.\r\n\r\n\ @param\ img\ The\ image\ to\ prepare.\r\n\ @param\ bgColor\ The\ background\ color\ with\ which\ to\ fill\ the\ image.\r\n\ @param\ imgWidth\ The\ width\ of\ the\ image\ to\ create\ or\ rework.\r\n\ @param\ imgHeight\ The\ height\ of\ the\ image\ to\ create\ or\ rework.\r\n\ @return\ The\ prepared\ image.\r\n
comment13.params=g
comment13.target=void\ paintBorder(java.awt.Graphics)
comment13.text=\r\n\ Paints\ this\ component's\ border,\ if\ it\ has\ one.\r\n\r\n\ @param\ g\ \ the\ <code>Graphics</code>\ context\ in\ which\ to\ paint.\r\n
comment14.params=g
comment14.target=void\ paintText(java.awt.Graphics)
comment14.text=\r\n\ Paints\ the\ text\ onto\ the\ buttons\ background\ image.\r\n\r\n\ @param\ g\ The\ <code>Graphics</code>\ context\ in\ which\ to\ paint.\r\n
comment15.params=img\ lines\ offset
comment15.target=void\ printText(greenfoot.GreenfootImage,\ java.lang.String[],\ int)
comment15.text=\r\n\ Helper\ method\ to\ print\ text\ onto\ the\ background\ image.\r\n\r\n\ @param\ img\ The\ image\ to\ write\ onto.\r\n\ @param\ lines\ The\ lines\ of\ text\ to\ write.\r\n\ @param\ offset\ The\ offset\ to\ the\ baseline\ (used\ for\ pressed\ effect).\r\n
comment2.params=text\ idNumber
comment2.target=Button(java.lang.String,\ int)
comment2.text=\r\n\ Creates\ a\ button\ with\ the\ specified\ text\ and\ identifier\ number.\r\n\r\n\ @param\ text\ The\ text\ displayed\ on\ the\ button.\r\n\ @param\ idNumber\ An\ identifier\ number.\r\n
comment3.params=text\ font\ textColor
comment3.target=Button(java.lang.String,\ java.awt.Font,\ java.awt.Color)
comment3.text=\r\n\ Constructs\ a\ button\ with\ text\ of\ the\ specified\ font\ and\ color.\r\n\r\n\ @param\ text\ The\ text\ displayed\ on\ the\ button.\r\n\ @param\ font\ The\ font\ used\ to\ write\ on\ this\ component.\r\n\ @param\ textColor\ The\ color\ to\ use\ for\ displaying\ text.\r\n
comment4.params=text\ font\ textColor\ bgColor
comment4.target=Button(java.lang.String,\ java.awt.Font,\ java.awt.Color,\ java.awt.Color)
comment4.text=\r\n\ Constructs\ a\ button\ with\ text\ of\ the\ specified\ color\ on\ a\ background\r\n\ of\ the\ specified\ color.\r\n\r\n\ @param\ text\ The\ text\ displayed\ on\ the\ button.\r\n\ @param\ font\ The\ font\ used\ to\ write\ on\ this\ component.\r\n\ @param\ textColor\ The\ color\ to\ use\ for\ displaying\ text.\r\n\ @param\ bgColor\ The\ desired\ background\ color.\r\n
comment5.params=normalBG\ pressedBG\ hoverBG
comment5.target=Button(greenfoot.GreenfootImage,\ greenfoot.GreenfootImage,\ greenfoot.GreenfootImage)
comment5.text=\r\n\ Creates\ a\ button\ using\ the\ specified\ images.\ The\ images\ may\ be\r\n\ written\ on\ with\ <code>setText()</code>.\r\n\r\n\ @param\ normalBG\ The\ image\ displayed\ when\ the\ button\ is\ up\ (normal).\r\n\ @param\ pressedBG\ The\ image\ displayed\ when\ the\ button\ is\ down\ (pressed).\r\n\ @param\ hoverBG\ The\ image\ displayed\ when\ the\ mouse\ is\ hovering\ over\ the\r\n\ button.\r\n\ @throws\ IllegalArgumentException\ when\ an\ image\ is\ null.\r\n
comment6.params=
comment6.target=void\ act()
comment6.text=\r\n\ React\ to\ the\ mouse\ including\ rollovers\ and\ button\ clicks.\r\n
comment7.params=
comment7.target=boolean\ isPressed()
comment7.text=\r\n\ Returns\ true\ if\ this\ button\ is\ currently\ down\ (pressed),\ otherwise\r\n\ returns\ false.\r\n\r\n\ @return\ <code>true</code>\ if\ this\ button\ is\ currently\ pressed,\ otherwise\r\n\ <code>false</code>.\r\n
comment8.params=d
comment8.target=void\ setSize(java.awt.Dimension)
comment8.text=\r\n\ Resizes\ this\ button\ so\ that\ it\ has\ width\ <code>d.width</code>\r\n\ and\ height\ <code>d.height</code>.\r\n\r\n\ @param\ d\ The\ dimension\ specifying\ the\ new\ size.\r\n
comment9.params=bgDownColor
comment9.target=void\ setBackgroundPressed(java.awt.Color)
comment9.text=\r\n\ Set\ the\ background\ color\ of\ this\ button\ when\ down\ (pressed).\r\n\r\n\ @param\ bgDownColor\ The\ desired\ background\ color\ when\ pressed.\r\n
numComments=16
