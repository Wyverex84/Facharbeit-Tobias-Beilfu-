#BlueJ class context
comment0.target=TimerBar
comment0.text=\r\n\ AUTHOR\:\ danpost\ (greenfoot.org\ username)<br>\r\n\ VERSION\:\ 1.0<br>\r\n\ LAST\ MODIFIED\:\ November\ 5,\ 2012<br>\r\n\ <br>\r\n\ DESCRIPTION\:<br>\r\n\ a\ sub-class\ of\ the\ Bar\ class\ whose\ value\ will\ be\ incremented\ or\ decremented\ each\ time\ a\ specified\r\n\ number\ of\ frames\ sets\ or\ a\ specified\ number\ of\ time\ sets\ has\ passed.\ \ It\ is\ the\ responsibility\ of\ another\ class\r\n\ (whether\ the\ world\ or\ another\ actor\ class)\ to\ check\ if\ count\ has\ finished,\ and\ act\ upon\ that\ condition.\r\n
comment1.params=refText\ uomText\ maxValue\ delayCt\ ctDownward\ ctByFrames
comment1.target=TimerBar(java.lang.String,\ java.lang.String,\ int,\ int,\ boolean,\ boolean)
comment1.text=\r\n\ creates\ the\ specified\ timer\ bar\r\n\ \r\n\ @param\ refText\ the\ text\ used\ for\ the\ title\ of\ the\ bar\r\n\ @param\ uomText\ the\ text\ used\ for\ the\ unit\ of\ measure\ for\ the\ value\ text\ of\ the\ bar\r\n\ @param\ maxValue\ the\ number\ of\ frame\ or\ millisecond\ sets\ that\ must\ pass\ for\ the\ timer\ to\ run\ its\ course\r\n\ @param\ delayCt\ the\ number\ of\ frames\ or\ milliseconds\ in\ each\ set\ that\ is\ counted\r\n\ @param\ ctDownward\ a\ flag\ determining\ the\ direction\ of\ count\ (down\ or\ up)\r\n\ @param\ ctByFrame\ a\ flag\ indicating\ whether\ the\ bar\ counts\ frames\ or\ milliseconds\r\n
comment10.params=delayCt
comment10.target=void\ setDelayCount(int)
comment10.text=\r\n\ sets\ the\ number\ of\ frames\ or\ milliseconds\ to\ use\ for\ each\ set\ that\ is\ to\ be\ counted\r\n\r\n\ @param\ delayCt\ the\ new\ number\ of\ frames\ or\ milliseconds\ to\ use\ between\ each\ change\ in\ the\ value\ of\ the\ bar\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ runs\ the\ timer\r\n
comment3.params=
comment3.target=void\ begin()
comment3.text=\r\n\ resets\ and\ starts\ the\ timer\r\n
comment4.params=
comment4.target=void\ stop()
comment4.text=\r\n\ stops\ the\ timer\ (can\ be\ 'restart'ed\ from\ current\ state)\r\n
comment5.params=
comment5.target=void\ restart()
comment5.text=\r\n\ restarts\ the\ counter\ if\ it\ has\ been\ 'stop'ped\r\n
comment6.params=
comment6.target=boolean\ isExpired()
comment6.text=\r\n\ gets\ the\ expiration\ state\ of\ the\ timer\ (has\ it\ finished\ running\ its\ course\ or\ not)\r\n\r\n\ @return\ the\ expiration\ state\ of\ the\ timer\r\n
comment7.params=
comment7.target=boolean\ getCountDownward()
comment7.text=\r\n\ gets\ the\ current\ direction\ of\ count\ for\ the\ timer\ (up\ or\ down)\r\n\r\n\ @return\ the\ current\ counting\ direction\ the\ timer\ is\ using\r\n
comment8.params=ctDownward
comment8.target=void\ setCountDownward(boolean)
comment8.text=\r\n\ sets\ the\ counting\ direction\ the\ timer\ is\ to\ use\ (can\ be\ changed\ in\ mid-stream\ of\ counting)\r\n\r\n\ @param\ ctDownward\ the\ new\ direction\ that\ the\ timer\ is\ to\ count\r\n
comment9.params=
comment9.target=int\ getDelayCount()
comment9.text=\r\n\ gets\ the\ current\ number\ of\ frames\ or\ milliseconds\ used\ for\ each\ set\ that\ is\ counted\r\n\r\n\ @return\ the\ current\ number\ of\ frames\ or\ milliseconds\ used\ between\ each\ change\ in\ the\ value\ of\ the\ bar\r\n
numComments=11
