#BlueJ class context
comment0.target=Checkbox
comment0.text=\r\n\ This\ is\ a\ generic,\ reusable\ checkbox\ for\ a\ user\ interface.\ This\ component\ is\ part\ of\ the\ "MSG"\ \r\n\ Greenfoot\ GUI\ toolkit.\r\n\ \r\n\ The\ checkbox\ has\ no\ callback\ -\ it\ is\ used\ by\ polling\ its\ state\ at\ appropriate\ times.\r\n\ \r\n\ Note\ that\ positioning\ places\ the\ component's\ top\ left\ corner\ at\ the\ target\ location.\r\n\ \r\n\ @author\ Michael\ K\u00F6lling\ \r\n\ @version\ 1.3\r\n
comment1.params=
comment1.target=Checkbox()
comment1.text=\r\n\ Create\ a\ checkbox\ without\ text.\r\n
comment10.params=
comment10.target=greenfoot.Font\ getFont()
comment10.text=\r\n\ Return\ this\ button's\ font.\r\n
comment11.params=backgroundColor
comment11.target=void\ setBackground(greenfoot.Color)
comment11.text=\ \r\n\ Set\ the\ background\ color.\r\n
comment12.params=foregroundColor
comment12.target=void\ setForeground(greenfoot.Color)
comment12.text=\ \r\n\ Set\ the\ foreground\ color.\r\n
comment13.params=boxSize
comment13.target=void\ setSize(int)
comment13.text=\ \r\n\ Set\ the\ size\ of\ this\ checkbox.\r\n
comment14.params=x\ y
comment14.target=void\ setLocation(int,\ int)
comment14.text=\r\n\ Override\ setLocation\ to\ position\ the\ button's\ top\ left\ corner\ at\ the\ given\ location.\r\n
comment15.params=offset
comment15.target=void\ paintBevel(int)
comment15.text=\r\n\ Paint\ one\ 1-pixel-line\ of\ the\ border\ bevel.\r\n
comment16.params=
comment16.target=void\ paintBox()
comment16.text=\r\n\ Paint\ the\ button's\ background.\r\n
comment17.params=
comment17.target=void\ paintCheck()
comment17.text=\r\n\ Paint\ the\ button's\ border.\r\n
comment18.params=
comment18.target=void\ paintText()
comment18.text=\r\n\ Paint\ the\ button's\ text.\r\n
comment19.params=
comment19.target=void\ repaint()
comment19.text=\r\n\ Paint\ the\ button\ image,\ including\ the\ button\ text\ and\ decorations.\r\n
comment2.params=text
comment2.target=Checkbox(java.lang.String)
comment2.text=\r\n\ Create\ a\ checkbox\ with\ a\ given\ text\ label.\r\n
comment20.params=
comment20.target=void\ createImage()
comment20.text=\r\n\ Create\ the\ actor's\ image\ at\ the\ right\ size.\ If\ the\ size\ has\ been\ set\ explicitly,\ that\ size\ \r\n\ is\ used.\ If\ not,\ the\ size\ is\ calculated\ \ to\ fit\ the\ button\ text.\ The\ size\ calculation\ takes\ \r\n\ the\ text\ on\ the\ button\ and\ the\ current\ font\ into\ account.\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Act\ -\ check\ whether\ the\ checkbox\ was\ clicked.\r\n
comment4.params=checked
comment4.target=void\ setChecked(boolean)
comment4.text=\r\n\ Check\ or\ uncheck\ this\ checkbox.\r\n\ \r\n\ @param\ checked\ \ If\ true,\ check\ this\ box.\ Otherwise\ uncheck.\r\n
comment5.params=
comment5.target=boolean\ isChecked()
comment5.text=\r\n\ Return\ the\ status\ of\ this\ checkbox.\r\n\ \r\n\ @return\ True\ if\ this\ checkbox\ is\ checked.\ False\ otherwise.\r\n
comment6.params=
comment6.target=void\ toggle()
comment6.text=\r\n\ Toggle\ this\ switch's\ state.\r\n
comment7.params=text
comment7.target=void\ setText(java.lang.String)
comment7.text=\ \r\n\ Set\ the\ text\ to\ be\ displayed.\r\n
comment8.params=
comment8.target=java.lang.String\ getText()
comment8.text=\r\n\ Return\ this\ button's\ text.\r\n
comment9.params=font
comment9.target=void\ setFont(greenfoot.Font)
comment9.text=\ \r\n\ Set\ the\ font\ for\ the\ button\ text.\r\n
numComments=21
